{"version":3,"sources":["WSManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Modules","sourcesContent":["import { Protocol, HotKey } from './Protocol';\r\nimport ENCManager from './ENCManager';\r\nimport GMManager from './GMManager'\r\nimport UIManager from './UIManager';\r\nimport UDManager from './UDManager';\r\nimport MPManager from './MPManager';\r\nimport { hot_key } from './ModuleManager';\r\n\r\n/**\r\n * ws网络管理类\r\n * \r\n * @export\r\n * @class WSManager\r\n */\r\nexport default class WSManager {\r\n    private static _instance: WSManager = null;\r\n    private constructor() { }\r\n    /**\r\n     * 获取WSManager单例对象\r\n     * \r\n     * @static\r\n     * @returns {WSManager} \r\n     * @memberof WSManager\r\n     */\r\n    static getInstance(): WSManager {\r\n        if (WSManager._instance === null) {\r\n            WSManager._instance = new WSManager();\r\n        }\r\n        return WSManager._instance;\r\n    }\r\n    /**\r\n     * 心跳间隔时间，单位毫秒\r\n     * \r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private readonly heartbeatInterval: number = 5000;\r\n    /**\r\n     * 心跳发送后清零，之后累加\r\n     * \r\n     * @private\r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private intervalTime: number = 0;\r\n    /**\r\n     * 消息超时时长\r\n     * \r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private readonly timeoutTime: number = 10000;\r\n    /**\r\n     * 心跳最大间隔时间，超过则掉线\r\n     * \r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private readonly timeoutMax: number = 30000;\r\n    /**\r\n     * 心跳最早一次发送的时间\r\n     * \r\n     * @private\r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private heartbeatStart: number = 0;\r\n    /**\r\n     * 心跳最后一次收到的时间\r\n     * \r\n     * @private\r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private heartbeatEnd: number = 0;\r\n    /**\r\n    * 时间调度器id（setInterval）\r\n    * \r\n    * @private\r\n    * @type {number}\r\n    * @memberof WSManager\r\n    */\r\n    private timeID: number = null;\r\n    /**\r\n     * ws连接地址\r\n     * \r\n     * @private\r\n     * @type {string}\r\n     * @memberof WSManager\r\n     */\r\n    private url: string = null;\r\n    /**\r\n     * WebSocket对象\r\n     * \r\n     * @private\r\n     * @type {WebSocket}\r\n     * @memberof WSManager\r\n     */\r\n    private ws: WebSocket = null;\r\n    /**\r\n     * 当前连接状态\r\n     * \r\n     * @private\r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private readyState: number = null;\r\n    /**\r\n     * 延迟时间，单位毫秒\r\n     * \r\n     * @private\r\n     * @type {number}\r\n     * @memberof WSManager\r\n     */\r\n    private delayTime: number = 0;\r\n    /**\r\n     * 存放发送数据的数组，用于判断消息超时\r\n     * \r\n     * @private\r\n     * @type {SendData[]}\r\n     * @memberof WSManager\r\n     */\r\n    private sendDataArray: SendData[] = [];\r\n    /**\r\n     * 主动断开时发送过来的回调\r\n     * \r\n     * @private\r\n     * @type {Function}\r\n     * @memberof WSManager\r\n     */\r\n    private cb_close: Function = null;\r\n    /**\r\n     * 是否登录游戏服\r\n     * \r\n     * @private\r\n     * @type {boolean}\r\n     * @memberof WSManager\r\n     */\r\n    private isLogin: boolean = false;\r\n    /**\r\n     * 修改登录状态\r\n     * \r\n     * @param {boolean} state \r\n     * @memberof WSManager\r\n     */\r\n    setLoginState(state: boolean) {\r\n        this.isLogin = state;\r\n    }\r\n    /**\r\n     * 连接ws服务器\r\n     * \r\n     * @param {string} url 连接地址\r\n     * @memberof WSManager\r\n     */\r\n    connect(url: string): Promise<void> {\r\n        return new Promise<void>((resolve, reject) => {\r\n            if (this.ws || url.length < 1 || this.readyState) {\r\n                this.destroySelf();\r\n                reject('连接服务器失败,参数错误');\r\n            }\r\n            this.readyState = WebSocket.CONNECTING;\r\n            this.ws = new WebSocket(url);\r\n            this.ws.binaryType = \"arraybuffer\";\r\n            /**\r\n             * ws连接上时触发\r\n             */\r\n            this.ws.onopen = (ev: Event) => {\r\n                this.readyState = WebSocket.OPEN;\r\n                this.url = url;\r\n                this.checkTimeOut();\r\n                resolve();\r\n            };\r\n            /**\r\n             * ws断开连接时触发\r\n             */\r\n            this.ws.onclose = (ev: CloseEvent) => {\r\n                switch (this.readyState) {\r\n                    case WebSocket.CONNECTING://连接失败\r\n                        reject('连接服务器失败,请检查网络状态');\r\n                        break;\r\n                    case WebSocket.OPEN://意外断开连接\r\n                        cc.log('意外断开连接');\r\n                        cc.systemEvent.emit('cb_diconnect');\r\n                        break;\r\n                    case WebSocket.CLOSING://客户端主动断开连接\r\n                        cc.log('客户端主动断开连接');\r\n                        if (this.cb_close) { this.cb_close(); }\r\n                        break;\r\n                    case WebSocket.CLOSED://心跳超时\r\n                        cc.log('心跳超时');\r\n                        cc.systemEvent.emit('cb_diconnect');\r\n                        break;\r\n                    default:\r\n                        cc.log('onclose：未知状态！');\r\n                        cc.systemEvent.emit('cb_diconnect');\r\n                        break;\r\n                }\r\n                this.destroySelf();\r\n            };\r\n            /**\r\n             * 收到服务器消息时触发\r\n             */\r\n            this.ws.onmessage = (ev: MessageEvent) => {\r\n                let msgId = this.getMessageId(ev.data, 12);\r\n                let msgBody = this.getMessageBody(ev.data, 32);\r\n                let s_data: S_Data = JSON.parse(msgBody);\r\n                if (msgId > 10000) {\r\n                    //服务器的推送消息\r\n                    if (s_data.code === 0) {\r\n                        this.doPush(msgId, s_data.content);\r\n                    } else {\r\n                        cc.log('推送了错误消息过来');\r\n                    }\r\n                } else {\r\n                    //客户端请求返回的数据\r\n                    let sendData = this.getSendData(msgId);\r\n                    if (sendData) {\r\n                        this.delayTime = Date.now() - sendData.sendTime;\r\n                        sendData.callback(s_data.code, s_data.content);\r\n                        cc.js.array.remove(this.sendDataArray, sendData);\r\n                    } else {\r\n                        if (msgId !== Protocol.ACCOUNT_PING)\r\n                            cc.log('onmessage:协议号' + msgId + '超时或未知');\r\n                    }\r\n                }\r\n            };\r\n        });\r\n    }\r\n    /**\r\n     * 检查消息超时\r\n     * \r\n     * @memberof WSManager\r\n     */\r\n    private checkTimeOut(): void {\r\n        let dateTime = Date.now();\r\n        this.heartbeatStart = dateTime;\r\n        this.heartbeatEnd = dateTime;\r\n        this.intervalTime = 0;\r\n        this.sendDataArray.length = 0;\r\n        this.timeID = setInterval(() => {\r\n            if (this.readyState !== WebSocket.OPEN) return;\r\n            this.checkHeartbeat();\r\n            let tempRemove: SendData[] = [];\r\n            this.sendDataArray.forEach((item: SendData) => {\r\n                if (Date.now() - item.sendTime >= this.timeoutTime) {\r\n                    item.callback(-1);\r\n                    tempRemove.push(item);\r\n                }\r\n            });\r\n            cc.js.array.removeArray(this.sendDataArray, tempRemove);\r\n        }, 1000);\r\n    }\r\n    /**\r\n     * 停止心跳检测\r\n     * \r\n     * @memberof WSManager\r\n     */\r\n    stopCheck(): void {\r\n        if (this.timeID) {\r\n            clearInterval(this.timeID);\r\n            this.timeID = null;\r\n        }\r\n    }\r\n    /**\r\n     * 心跳检测\r\n     * \r\n     * @memberof WSManager\r\n     */\r\n    private checkHeartbeat() {\r\n        if (this.intervalTime === 0) {\r\n            this.heartbeatStart = Date.now();\r\n            //发送心跳包\r\n            this.sendMsg(Protocol.ACCOUNT_HEART, '', (flag: number, content?: any) => {\r\n                if (flag === 0) {\r\n                    this.heartbeatEnd = Date.now();\r\n                    this.delayTime = this.heartbeatEnd - this.heartbeatStart;\r\n                    if (this.isLogin) {\r\n                        let obj = { ping: this.delayTime };\r\n                        this.sendMsg(Protocol.ACCOUNT_PING, JSON.stringify(obj), null);\r\n                    }\r\n                } else {\r\n                    cc.log('心跳返回错误了！');\r\n                }\r\n            });\r\n        }\r\n        this.intervalTime += 1000;\r\n        if (this.intervalTime >= this.heartbeatInterval) {\r\n            this.intervalTime = 0;\r\n        }\r\n        if (this.delayTime >= this.timeoutMax) {\r\n            //掉线了\r\n            this.readyState = WebSocket.CLOSED;\r\n            this.ws.close();\r\n        }\r\n    }\r\n    /**\r\n     * 处理服务器推送消息\r\n     * \r\n     * @param {Protocol} msgId 协议号\r\n     * @param {any} content 数据明文对象\r\n     * @memberof WSManager\r\n     */\r\n    private doPush(msgId: Protocol, content: any): void {\r\n        switch (msgId) {\r\n            case Protocol.ACCOUNT_KICK_OFFLINE_NOTIFY://推送消息(玩家被踢下线)****\r\n                break;\r\n            case Protocol.WALLET_WALLET_NOTIFY://推送消息(钱包数据变化)\r\n                UDManager.getInstance().account_mine.walletVo = content as WalletVo;\r\n                break;\r\n            case Protocol.MESSAGE_NOTICE_NOTIFY://推送消息(公告数据)\r\n                break;\r\n            case Protocol.CHAT_SEND_NOTIFY://推送消息(聊天信息通知)****\r\n                cc.systemEvent.emit('chatPush', content);\r\n                break;\r\n            case Protocol.HOTPROMPT_HOTDATA_NOTIFY://推送消息(红点提示数据)****\r\n                let hots = content as HotPromptAttrib[];\r\n                hots.forEach((hot: HotPromptAttrib) => {\r\n                    if (hot.hotKey === HotKey.HOT_KEY_ORDER) {\r\n                        if (GMManager.getInstance().orderCount > -1 && GMManager.getInstance().orderCount < hot.hotVal) {\r\n                            MPManager.getInstance().playMsg();\r\n                        }\r\n                        GMManager.getInstance().orderCount = hot.hotVal;\r\n                    }\r\n                }, this);\r\n                break;\r\n            case Protocol.MALL_CHARGE_NOTIFY://购买或充值成功通知\r\n                break;\r\n            case Protocol.DZPKER_TABLE_STATE_NOTIFY://推送消息(游戏桌子状态变化通知)****tabel\r\n                GMManager.getInstance().setTableData(content as TableData, 1);\r\n                break;\r\n            case Protocol.DZPKER_SEAT_STATE_NOTIFY://推送消息(游戏座位数据变化通知)****tabel\r\n                GMManager.getInstance().setTableData(content as TableData, 2);\r\n                break;\r\n            case Protocol.DZPKER_TABLE_BT_NOTIFY://推送消息(游戏桌子表态通知)****tabel\r\n                GMManager.getInstance().setTableData(content as TableData, 3);\r\n                break;\r\n            case Protocol.DZPKER_TABLE_SETTLEMENT_NOTIFY://推送消息(游戏桌子总结算数据通知)****\r\n                cc.director.loadScene('GameResult', () => {\r\n                    UIManager.getInstance().getCanvasNode().getComponent('GameResult').updateData(content);\r\n                });\r\n                break;\r\n            case Protocol.DZPKER_TABLE_SETTLEMENT_INSURANCE_NOTIFY://推送消息(保险结算结果数据通知)****\r\n                if (content.result === 0) {//未买中\r\n                    UIManager.getInstance().showTip('未买中保险！本次保险不做赔偿');\r\n                } else {\r\n                    UIManager.getInstance().showTip('买中保险！需要赔付' + content.payMoney + '积分');\r\n                }\r\n                break;\r\n            case Protocol.DZPKER_TABLE_BUY_CHIP_SUCESS_NOTIFY://推送消息(积分购买成功通知)****\r\n                UIManager.getInstance().showTip(content);\r\n                break;\r\n            case Protocol.DZPKER_TABLE_SHOW_CARD_NOTIFY://推送消息(玩家亮牌通知)****\r\n                cc.systemEvent.emit('lookCard');\r\n                break;\r\n            case Protocol.DZPKER_TABLE_STRADDL_BT_NOTIFY://推送消息(闭眼盲注表态通知)\r\n                MPManager.getInstance().playStraddle();\r\n                GMManager.getInstance().setTableData(content as TableData, 2);\r\n                break;\r\n            case Protocol.DZPKER_TABLE_SEAT_KICK_NOTIFY://推送消息(玩家从座位上被踢起通知)\r\n                UIManager.getInstance().showTip(content);\r\n                if (GMManager.getInstance().btnScript) {\r\n                    GMManager.getInstance().btnScript.click_buy();\r\n                }\r\n                break;\r\n\r\n            default: break;\r\n        }\r\n    }\r\n    /**\r\n     * 根据协议号查找对象\r\n     * \r\n     * @param {Protocol} msgId 协议号\r\n     * @returns {SendData} 发送数据对象\r\n     * @memberof WSManager\r\n     */\r\n    private getSendData(msgId: Protocol): SendData {\r\n        for (let i = 0, len = this.sendDataArray.length; i < len; i++) {\r\n            let item: SendData = this.sendDataArray[i];\r\n            if (item.msgId === msgId) {\r\n                return item;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n    /**\r\n     * 客户端主动断开连接\r\n     * \r\n     * @memberof WSManager\r\n     */\r\n    disconnect(callback: Function): void {\r\n        if (this.ws && this.ws.readyState === WebSocket.OPEN && this.readyState === WebSocket.OPEN) {\r\n            this.readyState = WebSocket.CLOSING;\r\n            this.cb_close = callback;\r\n            this.ws.close();\r\n        }\r\n    }\r\n    /**\r\n     * 向服务器发送消息\r\n     * \r\n     * @param {Protocol} msgId 协议号\r\n     * @param {string} msgBody 消息明文\r\n     * @param {(flag: number, content?: any) => void} [callback] 回调函数，flag0为成功，负数失败，-1为超时\r\n     * @returns {boolean} 返回发送结果，成功或失败\r\n     * @memberof WSManager\r\n     */\r\n    sendMsg(msgId: Protocol, msgBody: string, callback?: (flag: number, content?: any) => void): boolean {\r\n        if (this.ws && this.ws.readyState === WebSocket.OPEN) {\r\n            if (callback) {\r\n                let sendData: SendData = this.getSendData(msgId);\r\n                if (sendData) {\r\n                    cc.js.array.remove(this.sendDataArray, sendData);\r\n                }\r\n                sendData = {\r\n                    msgId: msgId,\r\n                    sendTime: Date.now(),\r\n                    callback: callback\r\n                };\r\n                this.sendDataArray.push(sendData);\r\n            }\r\n            this.ws.send(this.createMessage(msgId, msgBody));\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    /**\r\n     * 解析消息号\r\n     * \r\n     * @param {ArrayBuffer} buf 服务器传送过来的数据\r\n     * @param {number} offset 偏移量\r\n     * @returns {number} 返回协议号\r\n     * @memberof WSManager\r\n     */\r\n    private getMessageId(buf: ArrayBuffer, offset: number): number {\r\n        let array = Array.apply([], new Uint8Array(buf));\r\n        let msgId: number = (\r\n            ((array[offset] & 0xFF) << 24) |\r\n            ((array[offset + 1] & 0xFF) << 16) |\r\n            ((array[offset + 2] & 0xFF) << 8) |\r\n            (array[offset + 3] & 0xFF)\r\n        );\r\n        return msgId;\r\n    }\r\n    /**\r\n     * 解析消息内容\r\n     * \r\n     * @param {ArrayBuffer} buf 服务器传送过来的数据\r\n     * @param {number} offset 偏移量\r\n     * @returns {string} 解析后的字符串数据\r\n     * @memberof WSManager\r\n     */\r\n    private getMessageBody(buf: ArrayBuffer, offset: number): string {\r\n        let bodyBuffer = buf.slice(offset);\r\n        return this.ArrayBufferToString(bodyBuffer);\r\n    }\r\n    /**\r\n     * 创建消息\r\n     * \r\n     * @param {number} msgId 消息号\r\n     * @param {string} msgBody 消息内容\r\n     * @returns {ArrayBuffer} 待发送数据\r\n     * @memberof WSManager\r\n     */\r\n    private createMessage(msgId: number, msgBody: string): ArrayBuffer {\r\n        let bodyArray = this.getArrayNumberFromString(msgBody);\r\n        let bodyLen = bodyArray.length;\r\n        let msgHeader: MessageHeader = {\r\n            hcheck: 0,\r\n            code: 0,\r\n            flag: 0,\r\n            id: 0,\r\n            timestamp: 0,\r\n            bcheck: 0,\r\n            blen: 0,\r\n            alen: 0,\r\n        };\r\n        msgHeader.id = msgId;\r\n        msgHeader.timestamp = Date.now() / 1000;\r\n        msgHeader.blen = bodyLen;\r\n        msgHeader.bcheck = this.checkSum(bodyArray, 0, bodyLen);\r\n        let headArray = this.getHeaderToArrayNumber(msgHeader);\r\n        msgHeader.hcheck = this.checkSum(headArray, 4, 28);\r\n        headArray = this.getHeaderToArrayNumber(msgHeader);\r\n        let totalArray = headArray.concat(bodyArray);\r\n        return new Uint8Array(totalArray).buffer;\r\n    }\r\n    /**\r\n     * 把消息头转换成int32类型的字节数组\r\n     * \r\n     * @param {MessageHeader} msgHeader 字节头对象\r\n     * @returns {Array<number>} 数组\r\n     * @memberof WSManager\r\n     */\r\n    private getHeaderToArrayNumber(msgHeader: MessageHeader): Array<number> {//消息头转字节数组\r\n        let headArray = this.numberToArrayNumber(msgHeader.hcheck);\r\n        headArray = headArray.concat(this.numberToArrayNumber(msgHeader.code));\r\n        headArray = headArray.concat(this.numberToArrayNumber(msgHeader.flag));\r\n        headArray = headArray.concat(this.numberToArrayNumber(msgHeader.id));\r\n        headArray = headArray.concat(this.numberToArrayNumber(msgHeader.timestamp));\r\n        headArray = headArray.concat(this.numberToArrayNumber(msgHeader.bcheck));\r\n        headArray = headArray.concat(this.numberToArrayNumber(msgHeader.blen));\r\n        headArray = headArray.concat(this.numberToArrayNumber(msgHeader.alen));\r\n        return headArray;\r\n    }\r\n    /**\r\n     * 把数字转换为int32表示的字节数组\r\n     * \r\n     * @param {number} number 需要转换的数字\r\n     * @returns {Array<number>} 数组\r\n     * @memberof WSManager\r\n     */\r\n    private numberToArrayNumber(number: number): Array<number> {\r\n        let array = [];\r\n        array[0] = ((number >> 24) & 0xFF);\r\n        array[1] = ((number >> 16) & 0xFF);\r\n        array[2] = ((number >> 8) & 0xFF);\r\n        array[3] = (number & 0xFF);\r\n        return array;\r\n    }\r\n    /**\r\n     * 把字符串转换为字节数组\r\n     * \r\n     * @param {string} str 待转换的字符串\r\n     * @returns {Array<number>} 数组\r\n     * @memberof WSManager\r\n     */\r\n    private getArrayNumberFromString(str: string): Array<number> {\r\n        let arrayNumber: Array<number> = Array.apply([], this.StringToArrayBuffer(str));\r\n        return arrayNumber;\r\n    }\r\n    /**\r\n     * 消息数据效验\r\n     * \r\n     * @param {Array<number>} arrayNumber 待校验数组\r\n     * @param {number} offset 偏移量\r\n     * @param {number} length 长度\r\n     * @returns {number} 校验后生成的数字\r\n     * @memberof WSManager\r\n     */\r\n    private checkSum(arrayNumber: Array<number>, offset: number, length: number): number {\r\n        let hash = 0;\r\n        for (let i = offset; i < offset + length; i++) {\r\n            hash = hash << 7 ^ arrayNumber[i];\r\n        }\r\n        return hash;\r\n    }\r\n    /**\r\n     * ArrayBuffer转为字符串\r\n     * \r\n     * @param {ArrayBuffer} buf ArrayBuffer对象\r\n     * @returns {string} 转换出来的字符串\r\n     * @memberof WSManager\r\n     */\r\n    private ArrayBufferToString(buf: ArrayBuffer): string {\r\n        let str = String.fromCharCode.apply(null, new Uint8Array(buf));\r\n        str = ENCManager.getInstance().Utf8Decode(str);\r\n        return str;\r\n    }\r\n    /**\r\n     * 字符串转为ArrayBuffer对象，参数为字符串\r\n     * \r\n     * @param {string} str 待转换的字符串\r\n     * @returns {Uint8Array} 转换后的字节码\r\n     * @memberof WSManager\r\n     */\r\n    private StringToArrayBuffer(str: string): Uint8Array {\r\n        str = ENCManager.getInstance().Utf8Encode(str);\r\n        let buf = new ArrayBuffer(str.length);\r\n        let bufView = new Uint8Array(buf);\r\n        for (let i = 0, strLen = str.length; i < strLen; i++) {\r\n            bufView[i] = str.charCodeAt(i);\r\n        }\r\n        return bufView;\r\n    }\r\n    /**\r\n     * 获取延迟时间\r\n     * \r\n     * @returns {number} \r\n     * @memberof WSManager\r\n     */\r\n    getDelayTime(): number {\r\n        return this.delayTime;\r\n    }\r\n    /**\r\n     * 清理销毁\r\n     * \r\n     * @memberof WSManager\r\n     */\r\n    destroySelf(): void {\r\n        this.stopCheck();\r\n        this.url = null;\r\n        this.readyState = null;\r\n        this.ws = null;\r\n        this.sendDataArray.length = 0;\r\n        this.heartbeatEnd = 0;\r\n        this.heartbeatStart = 0;\r\n        this.intervalTime = 0;\r\n        this.delayTime = 0;\r\n        this.cb_close = null;\r\n        this.isLogin = false;\r\n\r\n        WSManager._instance = null;\r\n    }\r\n}"]}