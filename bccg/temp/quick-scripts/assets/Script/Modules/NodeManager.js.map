{"version":3,"sources":["NodeManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Modules","sourcesContent":["\r\n/**\r\n * 用户管理类\r\n * \r\n * @export\r\n * @class NodeManager\r\n */\r\nexport default class NodeManager {\r\n    private static _instance: NodeManager = null;\r\n    private constructor() { }\r\n    /**\r\n     * 获取NodeManager单例对象\r\n     * \r\n     * @static\r\n     * @returns {NodeManager} \r\n     * @memberof NodeManager\r\n     */\r\n    static getInstance(): NodeManager {\r\n        if (NodeManager._instance === null) {\r\n            NodeManager._instance = new NodeManager();\r\n            NodeManager._instance.__dispatchEvent__ = cc.Node.prototype.dispatchEvent;\r\n            cc.Node.prototype.dispatchEvent = NodeManager._instance.dispatchEvent;\r\n        }\r\n        return NodeManager._instance;\r\n    }\r\n\r\n    private canTouch: boolean = true;\r\n    private maxTouchNum: number = 1;\r\n    private touchNum: number = 0;\r\n    private __dispatchEvent__: (event: cc.Event) => void = null;\r\n\r\n    private dispatchEvent(event: cc.Event): void {\r\n        //这里的this指向的是cc.Node\r\n        switch (event.type) {\r\n            case 'touchstart':\r\n                if (NodeManager._instance.touchNum < NodeManager._instance.maxTouchNum) {\r\n                    NodeManager._instance.touchNum++;\r\n                    NodeManager._instance.canTouch = true;\r\n                    NodeManager._instance.__dispatchEvent__.call(this, event);\r\n                }\r\n                break;\r\n            case 'touchmove':\r\n                if (!NodeManager._instance.canTouch && NodeManager._instance.touchNum < NodeManager._instance.maxTouchNum) {\r\n                    NodeManager._instance.canTouch = true;\r\n                    NodeManager._instance.touchNum++;\r\n                }\r\n\r\n                if (NodeManager._instance.canTouch) {\r\n                    NodeManager._instance.__dispatchEvent__.call(this, event);\r\n                }\r\n\r\n                break;\r\n            case 'touchend':\r\n                if (NodeManager._instance.canTouch) {\r\n                    NodeManager._instance.canTouch = false;\r\n                    NodeManager._instance.touchNum--;\r\n                    NodeManager._instance.__dispatchEvent__.call(this, event);\r\n                }\r\n                break;\r\n            case 'touchcancel':\r\n                if (NodeManager._instance.canTouch) {\r\n                    NodeManager._instance.canTouch = false;\r\n                    NodeManager._instance.touchNum--;\r\n                    NodeManager._instance.__dispatchEvent__.call(this, event);\r\n                }\r\n                break;\r\n            default:\r\n                NodeManager._instance.__dispatchEvent__.call(this, event);\r\n        }\r\n    }\r\n\r\n\r\n    /**\r\n     * 清空单例对象\r\n     * \r\n     * @memberof NodeManager\r\n     */\r\n    destroySelf(): void {\r\n        this.canTouch = true;\r\n        this.maxTouchNum = 1;\r\n        this.touchNum = 0;\r\n        cc.Node.prototype.dispatchEvent = this.__dispatchEvent__;\r\n        this.__dispatchEvent__ = null;\r\n\r\n        NodeManager._instance = null;\r\n    }\r\n}\r\n"]}