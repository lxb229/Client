{"version":3,"sources":["GMManager.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"..\\..\\..\\..\\..\\assets\\Script\\Modules","sourcesContent":["import { GameState, CardType } from './Protocol';\r\nimport UDManager from './UDManager'\r\nimport MPManager from './MPManager';\r\nimport ButtonLayer from '../SceneScript/Game/ButtonLayer';\r\nimport PlayerLayer from '../SceneScript/Game/PlayerLayer';\r\n\r\n/**\r\n * 游戏管理类\r\n * \r\n * @export\r\n * @class GMManager\r\n */\r\nexport default class GMManager {\r\n    private static _instance: GMManager = null;\r\n    private constructor() { }\r\n    /**\r\n     * 获取GMManager单例对象\r\n     * \r\n     * @static\r\n     * @returns {GMManager} \r\n     * @memberof GMManager\r\n     */\r\n    static getInstance(): GMManager {\r\n        if (GMManager._instance === null) {\r\n            GMManager._instance = new GMManager();\r\n        }\r\n        return GMManager._instance;\r\n    }\r\n    /**\r\n     * 桌子数据对象\r\n     * \r\n     * @type {TableData}\r\n     * @memberof GMManager\r\n     */\r\n    private tableData: TableData = null;\r\n    /**\r\n     * 保险数据对象\r\n     * \r\n     * @type {SafeData}\r\n     * @memberof GMManager\r\n     */\r\n    safeData: SafeData = null;\r\n    /**\r\n     * 当前正下方节点所代表的坐位号\r\n     * \r\n     * @type {number}\r\n     * @memberof PlayerLayer\r\n     */\r\n    startIndex: number = 0;\r\n\r\n    /**\r\n     * 倒计时(毫秒数)\r\n     * \r\n     * @type {number}\r\n     * @memberof GMManager\r\n     */\r\n    countDownTime: number = 0;\r\n    /**\r\n     * 房主获取积分申购订单数量(热点消息获取)\r\n     * \r\n     * @type {number}\r\n     * @memberof GMManager\r\n     */\r\n    orderCount: number = -1;\r\n    /**\r\n     * 已经创建的公共牌数量\r\n     * @type {number}\r\n     * @memberof GMManager\r\n     */\r\n    publicCardNum: number = 0;\r\n    /**\r\n     * 是否已经创建自己的手牌\r\n     * @type {boolean}\r\n     * @memberof GMManager\r\n     */\r\n    isCreateMineCard: boolean = false;\r\n    /**\r\n     *是否显示游戏单局结算\r\n     * @type {boolean}\r\n     * @memberof GMManager\r\n     */\r\n    isShowGameOver: boolean = false;\r\n    /**\r\n     * 按钮层脚本\r\n     * @type {ButtonLayer}\r\n     * @memberof GMManager\r\n     */\r\n    btnScript: ButtonLayer = null;\r\n    /**\r\n     * 玩家层脚本\r\n     * @type {PlayerLayer}\r\n     * @memberof GMManager\r\n     */\r\n    playerScript: PlayerLayer = null;\r\n    /**\r\n     * 大盲倍数的底池\r\n     * @type {number}\r\n     * @memberof GMManager\r\n     */\r\n    poolMoneys: number = 0;\r\n    getTableData() {\r\n        return this.tableData;\r\n    }\r\n    /**\r\n     * 刷新游戏桌子对象\r\n     * \r\n     * @param {TableData} tableData \r\n     * @param {number} [type] 没值代表是请求返回,1是代表状态切换,2是代表坐位变化,3是有人表态\r\n     * @memberof GMManager\r\n     */\r\n    setTableData(tableData: TableData, type?: number) {\r\n        let oldCount = -1;\r\n        if (this.tableData) {\r\n            oldCount = this.getSeatDownCount();\r\n        }\r\n        this.tableData = tableData;\r\n        //当前这轮已下注的人下注最大值\r\n        let r_max = Math.ceil(Number(tableData.maxBetMoney) / tableData.bigBlind) * tableData.bigBlind;\r\n        if (r_max === 0) r_max = tableData.bigBlind;\r\n        this.poolMoneys = r_max;\r\n\r\n        let newCount = this.getSeatDownCount();\r\n        if (oldCount > -1 && newCount > oldCount) {//有人入座\r\n            MPManager.getInstance().playJoin();\r\n        }\r\n        cc.log('游戏数据++++++++gameState==' + tableData.gameState);\r\n        cc.log(tableData);\r\n        this.countDownTime = Number(tableData.vaildTime) - Number(tableData.svrTime);\r\n        //表态下注\r\n        cc.systemEvent.emit('betBT');\r\n        cc.systemEvent.emit('updateGame');\r\n        switch (type) {\r\n\r\n            case 1://1是代表状态切换\r\n                cc.systemEvent.emit('updatePlayerUI');\r\n                switch (tableData.gameState) {\r\n                    case GameState.STATE_TABLE_IDLE://空闲状态\r\n                        this.publicCardNum = 0;\r\n                        break;\r\n                    case GameState.STATE_TABLE_READY://准备状态\r\n                        this.publicCardNum = 0;\r\n                        MPManager.getInstance().playStart();\r\n                        break;\r\n                    case GameState.STATE_TABLE_OUTCARD_1://发牌状态\r\n                        cc.systemEvent.emit('doFPAction');\r\n                        break;\r\n                    case GameState.STATE_TABLE_BUY_INSURANCE://保险购买状态\r\n                        cc.systemEvent.emit('safe');\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                break;\r\n            case 2://2是代表坐位变化\r\n                cc.systemEvent.emit('updatePlayer');\r\n                break;\r\n            case 3://3是有人表态\r\n                cc.systemEvent.emit('updatePlayerUI');\r\n                cc.systemEvent.emit('btResult');\r\n                break;\r\n            default: //没值代表是请求返回\r\n                break;\r\n        }\r\n        //小于结算，都赋值\r\n        if (tableData.gameState < GameState.STATE_TABLE_OVER_ONCE) {\r\n            this.isShowGameOver = false;\r\n        }\r\n    }\r\n    /**\r\n     * 获取自己的座位信息(如果没有返回null,表示自己没有坐下)\r\n     * \r\n     * @returns \r\n     * @memberof GMManager\r\n     */\r\n    getMineSeat(): SeatData {\r\n        let account = UDManager.getInstance().account_mine;\r\n        return this.getSeatDataByAccount(account.accountId);\r\n    }\r\n    /**\r\n     * 判断是否是自己\r\n     * \r\n     * @param {SeatData} seatData \r\n     * @returns {boolean} \r\n     * @memberof GMManager\r\n     */\r\n    isMineSeat(seatData: SeatData): boolean {\r\n        if (seatData.accountId === UDManager.getInstance().account_mine.accountId) return true;\r\n        return false;\r\n    }\r\n    /**\r\n     * 获取我是否是房主\r\n     * \r\n     * @returns \r\n     * @memberof GMManager\r\n     */\r\n    isMineCreater() {\r\n        if (this.tableData.createPlayer === UDManager.getInstance().account_mine.accountId) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    /**\r\n     * 判断当前自己是否可以站起或离开\r\n     * \r\n     * @param {SeatData} mineSeat \r\n     * @returns \r\n     * @memberof GMManager\r\n     */\r\n    canStandOrLeave() {\r\n        let mineSeat = this.getMineSeat();\r\n        if (mineSeat) {//坐下了\r\n            if (this.tableData.gameState > GameState.STATE_TABLE_READY && this.tableData.gameState < GameState.STATE_TABLE_OVER_ONCE) {//游戏状态中\r\n                if (mineSeat.btResult === 1 || mineSeat.bGamed !== 1) {//弃牌了或者这局没有参与游戏\r\n                    return true;\r\n                } else {\r\n                    return false;\r\n                }\r\n            } else {\r\n                return true;\r\n            }\r\n        } else {//没有坐下\r\n            return true;\r\n        }\r\n    }\r\n    /**\r\n     * 根据用户id获取用户所在座位对象\r\n     * \r\n     * @param {string} acountId \r\n     * @returns \r\n     * @memberof GMManager\r\n     */\r\n    getSeatDataByAccount(acountId: string): SeatData {\r\n        let seatData = null;\r\n        if (this.tableData && this.tableData.seats) {\r\n            this.tableData.seats.forEach((seat: SeatData) => {\r\n                if (seat.accountId === acountId) {\r\n                    seatData = seat;\r\n                }\r\n            }, this);\r\n        }\r\n        return seatData;\r\n    }\r\n    /**\r\n     * 根据下标获取坐位对象\r\n     * \r\n     * @param {number} index \r\n     * @returns {SeatData} \r\n     * @memberof GMManager\r\n     */\r\n    getSeatDataByIndex(index: number): SeatData {\r\n        if (index < 0 || index > 8) return null;\r\n        for (let i = 0; i < this.tableData.seats.length; i++) {\r\n            let seat = this.tableData.seats[i];\r\n            if (index === seat.seatIndex) {\r\n                return seat;\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * 获取坐下的数量\r\n     * \r\n     * @memberof GMManager\r\n     */\r\n    getSeatDownCount() {\r\n        let count: number = 0;\r\n        if (this.tableData && this.tableData.seats) {\r\n            this.tableData.seats.forEach((seat: SeatData) => {\r\n                if (seat.accountId !== '0') {\r\n                    count++;\r\n                }\r\n            }, this);\r\n        }\r\n        return count;\r\n    }\r\n    /**\r\n     * 获取牌型\r\n     * @param {number} cType \r\n     * @memberof PlayerUI\r\n     */\r\n    getCardType(cType: number): string {\r\n        let str = '';\r\n        switch (cType) {\r\n            case CardType.TYPE_CARD_NONE:\r\n                str = '单   牌';\r\n                break;\r\n            case CardType.TYPE_CARD_ONE_DOUBLE:\r\n                str = '一   对';\r\n                break;\r\n            case CardType.TYPE_CARD_TWO_DOUBLE:\r\n                str = '两   对';\r\n                break;\r\n            case CardType.TYPE_CARD_SAME_THREE:\r\n                str = '三   条';\r\n                break;\r\n            case CardType.TYPE_CARD_SHUN:\r\n                str = '顺   子';\r\n                break;\r\n            case CardType.TYPE_CARD_SAME_SUIT:\r\n                str = '同   花';\r\n                break;\r\n            case CardType.TYPE_CARD_GOURD:\r\n                str = '葫   芦';\r\n                break;\r\n            case CardType.TYPE_CARD_SAME_FOUR:\r\n                str = '四   条';\r\n                break;\r\n            case CardType.TYPE_CARD_SAME_SUIT_SHUN:\r\n                str = '同 花 顺';\r\n                break;\r\n            case CardType.TYPE_CARD_GOLD_SAME_SUIT_SHUN:\r\n                str = '皇家同花顺';\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        return str;\r\n    }\r\n    /**\r\n     * 清空单例对象\r\n     * \r\n     * @memberof GMManager\r\n     */\r\n    destroySelf(): void {\r\n        this.clean();\r\n        GMManager._instance = null;\r\n    }\r\n    /**\r\n     * 清空数据\r\n     * \r\n     * @memberof GMManager\r\n     */\r\n    clean() {\r\n        this.tableData = null;\r\n        this.safeData = null;\r\n        this.startIndex = 0;\r\n        this.countDownTime = 0;\r\n        this.orderCount = -1;\r\n        this.publicCardNum = 0;\r\n        this.isCreateMineCard = false;\r\n        this.isShowGameOver = false;\r\n        this.btnScript = null;\r\n        this.playerScript = null;\r\n    }\r\n}\r\n"]}