<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.guse.platform.dao.system.MenusMapper">

    <resultMap id="Menus" type="com.guse.platform.entity.system.Menus">
        <result property="menuId" column="menu_id"/>
        <result property="menuTitle" column="menu_title"/>
        <result property="pid" column="pid"/>
        <result property="menuIcon" column="menu_icon"/>
        <result property="menuSort" column="menu_sort"/>
        <result property="menuUrl" column="menu_url"/>
        <result property="menuLevel" column="menu_level"/>
        <result property="menuStatus" column="menu_status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
	    <![CDATA[
        menu_id ,menu_title ,pid ,menu_icon ,menu_sort ,menu_url ,menu_level ,menu_status ,create_time ,update_time 
	    ]]>
	</sql>
	
    <insert id="insert" parameterType="com.guse.platform.entity.system.Menus">
    <![CDATA[
        INSERT INTO system_menus (
	        menu_id  ,
	        menu_title  ,
	        pid  ,
	        menu_icon  ,
	        menu_sort  ,
	        menu_url  ,
	        menu_level  ,
	        menu_status  ,
	        create_time  ,
	        update_time  
        ) VALUES (
        	#{menuId, jdbcType=INTEGER} ,
        	#{menuTitle, jdbcType=VARCHAR} ,
        	#{pid, jdbcType=INTEGER} ,
        	#{menuIcon, jdbcType=VARCHAR} ,
        	#{menuSort, jdbcType=INTEGER} ,
        	#{menuUrl, jdbcType=VARCHAR} ,
        	#{menuLevel, jdbcType=BIT} ,
        	#{menuStatus, jdbcType=BIT} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{updateTime, jdbcType=TIMESTAMP} 
        )
    ]]>
    </insert>
    
    <!-- 批量insert -->
     <insert id="insertBatch" parameterType="java.util.List">
   		INSERT INTO system_menus (
	        menu_id  ,
	        menu_title  ,
	        pid  ,
	        menu_icon  ,
	        menu_sort  ,
	        menu_url  ,
	        menu_level  ,
	        menu_status  ,
	        create_time  ,
	        update_time  
        ) VALUES 
	    <foreach collection="list" item="item" index="index" separator="," >  
	        (
	        	#{item.menuId, jdbcType=INTEGER} ,
	        	#{item.menuTitle, jdbcType=VARCHAR} ,
	        	#{item.pid, jdbcType=INTEGER} ,
	        	#{item.menuIcon, jdbcType=VARCHAR} ,
	        	#{item.menuSort, jdbcType=INTEGER} ,
	        	#{item.menuUrl, jdbcType=VARCHAR} ,
	        	#{item.menuLevel, jdbcType=BIT} ,
	        	#{item.menuStatus, jdbcType=BIT} ,
	        	#{item.createTime, jdbcType=TIMESTAMP} ,
	        	#{item.updateTime, jdbcType=TIMESTAMP} 
	        )
	    </foreach>  
    </insert>
    
    <update id="updateByPrimaryKeySelective" parameterType="com.guse.platform.entity.system.Menus">
		UPDATE system_menus
		<set>
		 	<if test="menuTitle != null">
	      	  menu_title = #{menuTitle, jdbcType=VARCHAR} ,
		 	</if>
		 	<if test="pid != null">
	      	  pid = #{pid, jdbcType=INTEGER} ,
		 	</if>
		 	<if test="menuIcon != null">
	      	  menu_icon = #{menuIcon, jdbcType=VARCHAR} ,
		 	</if>
		 	<if test="menuSort != null">
	      	  menu_sort = #{menuSort, jdbcType=INTEGER} ,
		 	</if>
		 	<if test="menuUrl != null">
	      	  menu_url = #{menuUrl, jdbcType=VARCHAR} ,
		 	</if>
		 	<if test="menuLevel != null">
	      	  menu_level = #{menuLevel, jdbcType=BIT} ,
		 	</if>
		 	<if test="menuStatus != null">
	      	  menu_status = #{menuStatus, jdbcType=BIT} ,
		 	</if>
		 	<if test="createTime != null">
	      	  create_time = #{createTime, jdbcType=TIMESTAMP} ,
		 	</if>
		 	<if test="updateTime != null">
	      	  update_time = #{updateTime, jdbcType=TIMESTAMP} ,
		 	</if>
		</set>
		WHERE
	       	menu_id = #{menuId} 
    </update>

    <delete id="deleteByPrimaryKey">
    <![CDATA[
        DELETE FROM system_menus WHERE pid = #{menuId};
        DELETE FROM system_resource WHERE sr_group = #{menuId};
        DELETE FROM system_menus WHERE menu_id = #{menuId};        
    ]]>
    </delete>
    
    <select id="selectByPrimaryKey" resultMap="Menus">
	    SELECT <include refid="Base_Column_List"/>
	    <![CDATA[
	        FROM system_menus 
	        WHERE 
		        menu_id = #{menuId} 
	    ]]>
    </select>
	
	<!-- -->
	
	<!-- 获得子菜单列表 -->
	<select id="selectChildMenusList" resultMap="Menus">
		SELECT <include refid="Base_Column_List"/>
	    <![CDATA[
	        FROM system_menus 
	        WHERE 
		        pid = #{pid}
	    ]]>
	</select>
	
	<!-- 获得所有菜单 -->
	<select id="selectAllMenusList" resultMap="Menus">
		SELECT <include refid="Base_Column_List"/>
	    <![CDATA[
	        FROM system_menus order by pid,menu_sort asc
	    ]]>
	</select>
	
</mapper>

