<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.guse.platform.dao.system.UsersMapper">

    <resultMap id="Users" type="com.guse.platform.entity.system.Users">
        <result property="userId" column="user_id"/>
        <result property="loginName" column="login_name"/>
        <result property="loginPass" column="login_pass"/>
        <result property="roleId" column="role_id"/>
        <result property="userStatus" column="user_status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

	<!-- 用于select查询公用抽取的列 -->
	<sql id="Base_Column_List">
	    <![CDATA[
        user_id ,login_name ,login_pass ,role_id ,user_status ,create_time ,update_time 
	    ]]>
	</sql>
	<sql id="sql_of_where">
	 	WHERE 1=1 
    	<if test="bParam != null" >
            <if test="bParam.userId != null"> AND user_id = #{bParam.userId,jdbcType=INTEGER} </if>
            <if test="bParam.loginName != null and bParam.loginName!=''"> AND login_name like concat(concat('%',#{bParam.loginName,jdbcType=VARCHAR}),'%') </if>
            <if test="bParam.userStatus != null"> AND user_status = #{bParam.userStatus,jdbcType=INTEGER} </if>
            <if test="bParam.createTime != null"> AND create_time = #{bParam.createTime,jdbcType=TIMESTAMP} </if>
            <if test="bParam.updateTime != null"> AND update_time = #{bParam.updateTime,jdbcType=TIMESTAMP} </if>
        </if>
    </sql>
	
    <insert id="insert" parameterType="com.guse.platform.entity.system.Users">
    <![CDATA[
        INSERT INTO system_users (
	        user_id  ,
	        login_name  ,
	        login_pass  ,
	        role_id  ,
	        user_status  ,
	        create_time  ,
	        update_time  
        ) VALUES (
        	#{userId, jdbcType=INTEGER} ,
        	#{loginName, jdbcType=VARCHAR} ,
        	#{loginPass, jdbcType=VARCHAR} ,
        	#{roleId, jdbcType=INTEGER} ,
        	#{userStatus, jdbcType=INTEGER} ,
        	#{createTime, jdbcType=TIMESTAMP} ,
        	#{updateTime, jdbcType=TIMESTAMP} 
        )
    ]]>
    </insert>
    
    <update id="updateByPrimaryKeySelective" parameterType="com.guse.platform.entity.system.Users">
		UPDATE system_users
		<set>
		 	<if test="loginName != null">
	      	  login_name = #{loginName, jdbcType=VARCHAR} ,
		 	</if>
		 	<if test="loginPass != null">
	      	  login_pass = #{loginPass, jdbcType=VARCHAR} ,
		 	</if>
		 	<if test="roleId != null">
	      	  role_id = #{roleId, jdbcType=INTEGER} ,
		 	</if>
		 	<if test="userStatus != null">
	      	  user_status = #{userStatus, jdbcType=INTEGER} ,
		 	</if>
		 	<if test="createTime != null">
	      	  create_time = #{createTime, jdbcType=TIMESTAMP} ,
		 	</if>
		 	<if test="updateTime != null">
	      	  update_time = #{updateTime, jdbcType=TIMESTAMP} ,
		 	</if>
		</set>
		WHERE
	       	user_id = #{userId} 
    </update>

    <delete id="deleteByPrimaryKey">
    <![CDATA[
        DELETE FROM system_users WHERE
        user_id = #{userId} 
    ]]>
    </delete>
    
    <select id="selectByPrimaryKey" resultMap="Users">
	    SELECT <include refid="Base_Column_List"/>
	    <![CDATA[
	        FROM system_users 
	        WHERE 
		        user_id = #{userId} 
	    ]]>
    </select>
    
    <!-- 通用查询 -->
    <select id="select" parameterType="java.util.Map" resultMap="Users">
        select 
        <include refid="Base_Column_List" />
        from system_users
        <include refid="sql_of_where" /> order by create_time desc
    </select>
    
    <!-- 通用分页查询 -->
    <select id="selectPageByParam" parameterType="java.util.Map" resultMap="Users">
        select 
        <include refid="Base_Column_List" />
        from system_users
        <include refid="sql_of_where" />
        <if test="pParam != null">
            <if test="pParam.orderByClause != null" > order by ${pParam.orderByClause} </if>
            <if test="pParam.orderByClause == null" > order by create_time desc </if>
            <if test="pParam.startIndex != null and pParam.pageSize != null" >
              limit #{pParam.startIndex} , #{pParam.pageSize}
            </if>
        </if>
        <if test="pParam == null">
             order by create_date desc
        </if>
    </select>
    
    <!-- 通用分页查询记录总数 -->
    <select id="countByParam" parameterType="java.util.Map" resultType="java.lang.Long">
        select count(*) from system_users
        <include refid="sql_of_where" />
    </select>
    
    <!-- 根据登录名称查询用户 -->
    <select id="getUserByLoginName" resultMap="Users">
    	SELECT <include refid="Base_Column_List"/>
	    <![CDATA[
	        FROM system_users 
	        WHERE 
		        login_name like #{loginName}
	    ]]>
    </select>
    
	
</mapper>

